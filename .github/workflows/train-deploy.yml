name: Train and Deploy to AWS ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
  ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
  ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}

jobs:
  train-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install python-dotenv boto3

    - name: 🤖 Run ML training script
      env:
        MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns
        MODEL_NAME: walmart-supercenter-model
      run: python train.py

    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🔐 Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: 🐳 Build and Push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: 📄 Register new ECS task definition revision
      id: ecs-task
      run: |
        CONTAINER_NAME=walmart-container

        TASK_DEF_JSON=$(aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION)
        
        NEW_TASK_DEF=$(echo $TASK_DEF_JSON | jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}" \
          '.taskDefinition |
          {family: .family, containerDefinitions: [.containerDefinitions[] | .image=$IMAGE],
          requiresCompatibilities, cpu, memory, networkMode, executionRoleArn, taskRoleArn}')
        
        echo "$NEW_TASK_DEF" > new-task-def.json

        TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json | jq -r '.taskDefinition.taskDefinitionArn')
        echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: 🚀 Deploy updated task definition to ECS
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER_NAME \
          --service $ECS_SERVICE_NAME \
          --task-definition $TASK_DEF_ARN
