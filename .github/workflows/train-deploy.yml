jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: 644020601055.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: walmart-fastapi
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Replace image tag in ECS task definition
        run: |
          sed -i 's|<IMAGE_PLACEHOLDER>|644020601055.dkr.ecr.us-east-1.amazonaws.com/walmart-fastapi:${{ github.sha }}|g' ecs-task-def.json

      - name: Register new ECS task definition
        id: register-task-def
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://ecs-task-def.json > result.json
          cat result.json
          echo "::set-output name=task_def_arn::$(jq -r '.taskDefinition.taskDefinitionArn' result.json)"

      - name: Update ECS service to use new task definition
        run: |
          aws ecs update-service \
            --cluster walmart-cluster \
            --service walmart-service \
            --task-definition ${{ steps.register-task-def.outputs.task_def_arn }} \
            --force-new-deployment
